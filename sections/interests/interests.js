// sections/interests/interests.js
// JavaScript —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–ò–Ω—Ç–µ—Ä–µ—Å—ã"

/* –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */
function closeDialog(dialog) {
  if (!dialog) return;
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
  if (dialog.classList.contains('closing')) return;
  
  dialog.classList.add('closing');
  setTimeout(() => {
    dialog.close();
    dialog.classList.remove('closing');
  }, 300);
}

/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ initInterestsDialogs */

/* –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ */
function closeAllInterestsDialogs() {
  const dialogs = document.querySelectorAll('.interests_dialog[open]');
  dialogs.forEach(dialog => {
    dialog.close();
    dialog.classList.remove('closing');
  });
}

/* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ HTML —Å–µ–∫—Ü–∏–π */
window.initInterestsDialogs = function() {
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
  if (window.interestsDialogsInitialized) {
    console.log('initInterestsDialogs: –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
    return;
  }
  
  console.log('initInterestsDialogs: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤...');
  
  // –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏
  closeAllInterestsDialogs();
  
  const dialogs = document.querySelectorAll('.interests_dialog');
  console.log('initInterestsDialogs: –ù–∞–π–¥–µ–Ω–æ –¥–∏–∞–ª–æ–≥–æ–≤:', dialogs.length);
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  dialogs.forEach(dialog => {
    dialog.removeEventListener('show', dialog._showHandler);
    dialog.removeEventListener('close', dialog._closeHandler);
    dialog.removeEventListener('keydown', dialog._keydownHandler);
    dialog.removeEventListener('click', dialog._clickHandler);
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const closeButtons = document.querySelectorAll('.interests_close-button');
  console.log('initInterestsDialogs: –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è:', closeButtons.length);
  
  closeButtons.forEach((button, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è ${index + 1}:`, button);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (button._clickHandler) {
      button.removeEventListener('click', button._clickHandler);
      console.log(`–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π click handler –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}`);
    }
    if (button._touchendHandler) {
      button.removeEventListener('touchend', button._touchendHandler);
      console.log(`–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π touchend handler –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}`);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    button._clickHandler = (event) => {
      console.log('üî• –ö–õ–ò–ö –ü–û –ö–ù–û–ü–ö–ï –ó–ê–ö–†–´–¢–ò–Ø INTERESTS!', {
        button: button,
        buttonId: button.id || 'no-id',
        buttonClass: button.className,
        dialog: button.closest('dialog'),
        dialogId: button.closest('dialog')?.id,
        event: event,
        eventTarget: event.target,
        eventCurrentTarget: event.currentTarget
      });
      event.preventDefault();
      event.stopPropagation();
      const dialog = button.closest('dialog');
      if (dialog) {
        console.log('‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ interests:', dialog.id);
        closeDialog(dialog);
      } else {
        console.error('‚ùå –î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è interests');
      }
    };
    
    button._touchendHandler = (event) => {
      console.log('üî• TOUCH –ü–û –ö–ù–û–ü–ö–ï –ó–ê–ö–†–´–¢–ò–Ø INTERESTS!', {
        button: button,
        dialog: button.closest('dialog'),
        event: event
      });
      event.preventDefault();
      event.stopPropagation();
      const dialog = button.closest('dialog');
      if (dialog) {
        console.log('‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ interests –ø–æ touch:', dialog.id);
        closeDialog(dialog);
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    button.addEventListener('click', button._clickHandler);
    button.addEventListener('touchend', button._touchendHandler);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}:`, {
      hasClickHandler: !!button._clickHandler,
      hasTouchendHandler: !!button._touchendHandler,
      buttonElement: button
    });
  });
  
  dialogs.forEach((dialog, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ ${index + 1}:`, dialog.id, dialog);
    
    // –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dialog._showHandler = () => {
      console.log(`üìñ –î–∏–∞–ª–æ–≥ ${dialog.id} –ø–æ–∫–∞–∑–∞–Ω`);
      document.body.style.overflow = 'hidden';
    };
    
    dialog._closeHandler = () => {
      console.log(`üìï –î–∏–∞–ª–æ–≥ ${dialog.id} –∑–∞–∫—Ä—ã—Ç`);
      document.body.style.overflow = '';
    };
    
    dialog._keydownHandler = (event) => {
      console.log(`‚å®Ô∏è –ö–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞ –≤ –¥–∏–∞–ª–æ–≥–µ ${dialog.id}:`, event.key, '–∫–æ–¥:', event.keyCode);
      if (event.key === 'Escape' || event.keyCode === 27) {
        console.log(`üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ ${dialog.id} –ø–æ –∫–ª–∞–≤–∏—à–µ Escape`);
        event.preventDefault();
        event.stopPropagation();
        closeDialog(dialog);
      }
    };
    
    dialog._clickHandler = (event) => {
      console.log(`üñ±Ô∏è –î–∏–∞–ª–æ–≥ ${dialog.id} –∫–ª–∏–∫:`, {
        target: event.target,
        currentTarget: event.currentTarget,
        isDialog: event.target === dialog,
        targetTagName: event.target.tagName,
        targetClass: event.target.className
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –ø–æ —Å–∞–º–æ–º—É –¥–∏–∞–ª–æ–≥—É (backdrop)
      if (event.target === dialog) {
        console.log(`üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ ${dialog.id} –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω`);
        event.preventDefault();
        event.stopPropagation();
        closeDialog(dialog);
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dialog.addEventListener('show', dialog._showHandler);
    dialog.addEventListener('close', dialog._closeHandler);
    dialog.addEventListener('keydown', dialog._keydownHandler);
    dialog.addEventListener('click', dialog._clickHandler);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ ${index + 1} (${dialog.id}):`, {
      hasShowHandler: !!dialog._showHandler,
      hasCloseHandler: !!dialog._closeHandler,
      hasKeydownHandler: !!dialog._keydownHandler,
      hasClickHandler: !!dialog._clickHandler
    });
  });
  
  // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
  window.interestsDialogsInitialized = true;
  
  console.log('initInterestsDialogs: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  console.log('initInterestsDialogs: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:');
  dialogs.forEach((dialog, index) => {
    console.log(`–î–∏–∞–ª–æ–≥ ${index + 1}:`, {
      hasShowHandler: !!dialog._showHandler,
      hasCloseHandler: !!dialog._closeHandler,
      hasKeydownHandler: !!dialog._keydownHandler,
      hasClickHandler: !!dialog._clickHandler
    });
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  window.testInterestsModal = function(dialogId) {
    const dialog = document.getElementById(dialogId);
    if (dialog) {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ interests:', dialogId);
      dialog.showModal();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
      const closeButton = dialog.querySelector('.interests_close-button');
      console.log('üß™ –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞:', closeButton);
      console.log('üß™ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏:', {
        hasClickHandler: !!closeButton?._clickHandler,
        hasTouchendHandler: !!closeButton?._touchendHandler
      });
    } else {
      console.error('‚ùå –î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω:', dialogId);
    }
  };
};