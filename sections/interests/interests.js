// sections/interests/interests.js
// JavaScript —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Å–µ–∫—Ü–∏–∏ "–ò–Ω—Ç–µ—Ä–µ—Å—ã"

/* –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */
function openInterestsDialog(dialog) {
  if (!dialog) return;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const scrollPosition = window.pageYOffset;
  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
  document.body.classList.add('interests-modal-open');
  // document.body.style.top = `-${scrollPosition}px`;

  document.body.style.overflow = 'hidden';
   document.body.style.top = `-${scrollPosition}px`;
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  dialog.showModal();
}

/* –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */
function closeDialog(dialog) {
  if (!dialog) return;
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
  if (dialog.classList.contains('closing')) return;
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
  resetAllInterestCards();
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π
  const scrollPosition = parseInt(document.body.style.top || '0') * -1;
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
  document.body.classList.remove('interests-modal-open');
  document.body.style.top = '';
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  window.scrollTo(0, scrollPosition);
  
  dialog.classList.add('closing');
  setTimeout(() => {
    dialog.close();
    dialog.classList.remove('closing');
  }, 300);
}

/* –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ */
function resetAllInterestCards() {
  const allCards = document.querySelectorAll('.interests_card-item');
  const allButtons = document.querySelectorAll('.interests_open-button');
  const allButtonContainers = document.querySelectorAll('.interests_button-container');
  const allTitles = document.querySelectorAll('.interests_card-item-title');
  
  allCards.forEach(card => {
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    card.classList.remove('active', 'hover', 'pressed', 'focused');
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏
    card.style.transform = 'none';
    card.style.boxShadow = '';
    card.style.backgroundColor = '';
    card.style.borderColor = '';
    card.style.opacity = '';
  });
  
  allButtons.forEach(button => {
    button.classList.remove('active', 'hover', 'pressed', 'focused');
    button.style.transform = 'none';
    button.style.boxShadow = '';
    button.style.backgroundColor = '';
  });
  
  allButtonContainers.forEach(container => {
    container.classList.remove('active', 'hover', 'pressed', 'focused');
    container.style.transform = 'none';
    container.style.boxShadow = '';
    container.style.backgroundColor = '';
    container.style.width = '';
    container.style.height = '';
    container.style.padding = '';
  });
  
  allTitles.forEach(title => {
    title.classList.remove('active', 'hover', 'pressed', 'focused');
    title.style.transform = 'none';
    title.style.textShadow = '';
    title.style.color = '';
  });
  
  console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å–±—Ä–æ—à–µ–Ω–æ');
}

/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ initInterestsDialogs */

/* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º */
function initCardClicks() {
  console.log('initCardClicks: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º...');
  
  const cardItems = document.querySelectorAll('.interests_card-item');
  const openButtons = document.querySelectorAll('.interests_open-button');
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º
  cardItems.forEach((card, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${index + 1}:`, card);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    card.removeEventListener('click', card._cardClickHandler);
    card.removeEventListener('touchend', card._cardTouchHandler);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    card._cardClickHandler = (event) => {
      console.log('üî• –ö–õ–ò–ö –ü–û –ö–ê–†–¢–û–ß–ö–ï!', {
        card: card,
        cardIndex: index,
        event: event,
        target: event.target
      });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
      event.preventDefault();
      event.stopPropagation();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –¥–∏–∞–ª–æ–≥–∞ –∏–∑ HTML onclick –∞—Ç—Ä–∏–±—É—Ç–∞
      const dialogId = card.onclick && card.onclick.toString().match(/getElementById\('([^']+)'\)/)?.[1];
      
      if (dialogId) {
        const dialog = document.getElementById(dialogId);
        if (dialog) {
          console.log('‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É:', dialogId);
          openInterestsDialog(dialog);
        }
      }
    };
    
    card._cardTouchHandler = (event) => {
      console.log('üî• TOUCH –ü–û –ö–ê–†–¢–û–ß–ö–ï!', {
        card: card,
        cardIndex: index,
        event: event
      });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
      event.preventDefault();
      event.stopPropagation();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –¥–∏–∞–ª–æ–≥–∞ –∏–∑ HTML onclick –∞—Ç—Ä–∏–±—É—Ç–∞
      const dialogId = card.onclick && card.onclick.toString().match(/getElementById\('([^']+)'\)/)?.[1];
      
      if (dialogId) {
        const dialog = document.getElementById(dialogId);
        if (dialog) {
          console.log('‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ touch –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É:', dialogId);
          openInterestsDialog(dialog);
        }
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    card.addEventListener('click', card._cardClickHandler);
    card.addEventListener('touchend', card._cardTouchHandler);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${index + 1}:`, {
      hasClickHandler: !!card._cardClickHandler,
      hasTouchHandler: !!card._cardTouchHandler
    });
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
  openButtons.forEach((button, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ ${index + 1}:`, button);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    button.removeEventListener('click', button._buttonClickHandler);
    button.removeEventListener('touchend', button._buttonTouchHandler);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    button._buttonClickHandler = (event) => {
      console.log('üî• –ö–õ–ò–ö –ü–û –ö–ù–û–ü–ö–ï –ü–û–î–†–û–ë–ù–ï–ï!', {
        button: button,
        buttonIndex: index,
        event: event,
        target: event.target
      });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
      event.preventDefault();
      event.stopPropagation();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –¥–∏–∞–ª–æ–≥–∞ –∏–∑ HTML onclick –∞—Ç—Ä–∏–±—É—Ç–∞
      const dialogId = button.onclick && button.onclick.toString().match(/getElementById\('([^']+)'\)/)?.[1];
      
      if (dialogId) {
        const dialog = document.getElementById(dialogId);
        if (dialog) {
          console.log('‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É:', dialogId);
          openInterestsDialog(dialog);
        }
      }
    };
    
    button._buttonTouchHandler = (event) => {
      console.log('üî• TOUCH –ü–û –ö–ù–û–ü–ö–ï –ü–û–î–†–û–ë–ù–ï–ï!', {
        button: button,
        buttonIndex: index,
        event: event
      });
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
      event.preventDefault();
      event.stopPropagation();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –¥–∏–∞–ª–æ–≥–∞ –∏–∑ HTML onclick –∞—Ç—Ä–∏–±—É—Ç–∞
      const dialogId = button.onclick && button.onclick.toString().match(/getElementById\('([^']+)'\)/)?.[1];
      
      if (dialogId) {
        const dialog = document.getElementById(dialogId);
        if (dialog) {
          console.log('‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ touch –Ω–∞ –∫–Ω–æ–ø–∫—É:', dialogId);
          openInterestsDialog(dialog);
        }
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    button.addEventListener('click', button._buttonClickHandler);
    button.addEventListener('touchend', button._buttonTouchHandler);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}:`, {
      hasClickHandler: !!button._buttonClickHandler,
      hasTouchHandler: !!button._buttonTouchHandler
    });
  });
  
  console.log('initCardClicks: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

/* –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ */
function closeAllInterestsDialogs() {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  resetAllInterestCards();
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
  document.body.classList.remove('interests-modal-open');
  document.body.style.top = '';
  
  const dialogs = document.querySelectorAll('.interests_dialog[open]');
  dialogs.forEach(dialog => {
    dialog.close();
    dialog.classList.remove('closing');
  });
}

/* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ HTML —Å–µ–∫—Ü–∏–π */
window.initInterestsDialogs = function() {
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
  if (window.interestsDialogsInitialized) {
    console.log('initInterestsDialogs: –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
    return;
  }
  
  console.log('initInterestsDialogs: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤...');
  
  // –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏
  closeAllInterestsDialogs();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º
  initCardClicks();
  
  const dialogs = document.querySelectorAll('.interests_dialog');
  console.log('initInterestsDialogs: –ù–∞–π–¥–µ–Ω–æ –¥–∏–∞–ª–æ–≥–æ–≤:', dialogs.length);
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  dialogs.forEach(dialog => {
    dialog.removeEventListener('show', dialog._showHandler);
    dialog.removeEventListener('close', dialog._closeHandler);
    dialog.removeEventListener('keydown', dialog._keydownHandler);
    dialog.removeEventListener('click', dialog._clickHandler);
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const closeButtons = document.querySelectorAll('.interests_close-button');
  console.log('initInterestsDialogs: –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è:', closeButtons.length);
  
  closeButtons.forEach((button, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è ${index + 1}:`, button);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (button._clickHandler) {
      button.removeEventListener('click', button._clickHandler);
      console.log(`–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π click handler –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}`);
    }
    if (button._touchendHandler) {
      button.removeEventListener('touchend', button._touchendHandler);
      console.log(`–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π touchend handler –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}`);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    button._clickHandler = (event) => {
      console.log('üî• –ö–õ–ò–ö –ü–û –ö–ù–û–ü–ö–ï –ó–ê–ö–†–´–¢–ò–Ø INTERESTS!', {
        button: button,
        buttonId: button.id || 'no-id',
        buttonClass: button.className,
        dialog: button.closest('dialog'),
        dialogId: button.closest('dialog')?.id,
        event: event,
        eventTarget: event.target,
        eventCurrentTarget: event.currentTarget
      });
      event.preventDefault();
      event.stopPropagation();
      const dialog = button.closest('dialog');
      if (dialog) {
        console.log('‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ interests:', dialog.id);
        closeDialog(dialog);
      } else {
        console.error('‚ùå –î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è interests');
      }
    };
    
    button._touchendHandler = (event) => {
      console.log('üî• TOUCH –ü–û –ö–ù–û–ü–ö–ï –ó–ê–ö–†–´–¢–ò–Ø INTERESTS!', {
        button: button,
        dialog: button.closest('dialog'),
        event: event
      });
      event.preventDefault();
      event.stopPropagation();
      const dialog = button.closest('dialog');
      if (dialog) {
        console.log('‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ interests –ø–æ touch:', dialog.id);
        closeDialog(dialog);
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    button.addEventListener('click', button._clickHandler);
    button.addEventListener('touchend', button._touchendHandler);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ${index + 1}:`, {
      hasClickHandler: !!button._clickHandler,
      hasTouchendHandler: !!button._touchendHandler,
      buttonElement: button
    });
  });
  
  dialogs.forEach((dialog, index) => {
    console.log(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ ${index + 1}:`, dialog.id, dialog);
    
    // –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dialog._showHandler = () => {
      console.log(`üìñ –î–∏–∞–ª–æ–≥ ${dialog.id} –ø–æ–∫–∞–∑–∞–Ω`);
      document.body.style.overflow = 'hidden';
    };
    
    dialog._closeHandler = () => {
      console.log(`üìï –î–∏–∞–ª–æ–≥ ${dialog.id} –∑–∞–∫—Ä—ã—Ç`);
      document.body.style.overflow = '';
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
      resetAllInterestCards();
    };
    
    dialog._keydownHandler = (event) => {
      console.log(`‚å®Ô∏è –ö–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞ –≤ –¥–∏–∞–ª–æ–≥–µ ${dialog.id}:`, event.key, '–∫–æ–¥:', event.keyCode);
      if (event.key === 'Escape' || event.keyCode === 27) {
        console.log(`üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ ${dialog.id} –ø–æ –∫–ª–∞–≤–∏—à–µ Escape`);
        event.preventDefault();
        event.stopPropagation();
        closeDialog(dialog);
      }
    };
    
    dialog._clickHandler = (event) => {
      console.log(`üñ±Ô∏è –î–∏–∞–ª–æ–≥ ${dialog.id} –∫–ª–∏–∫:`, {
        target: event.target,
        currentTarget: event.currentTarget,
        isDialog: event.target === dialog,
        targetTagName: event.target.tagName,
        targetClass: event.target.className,
        timeStamp: event.timeStamp
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –∏–º–µ–Ω–Ω–æ –ø–æ backdrop –¥–∏–∞–ª–æ–≥–∞ (–Ω–µ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É)
      // –ò —á—Ç–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫
      if (event.target === dialog && event.isTrusted) {
        console.log(`üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ ${dialog.id} –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω`);
        event.preventDefault();
        event.stopPropagation();
        closeDialog(dialog);
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dialog.addEventListener('show', dialog._showHandler);
    dialog.addEventListener('close', dialog._closeHandler);
    dialog.addEventListener('keydown', dialog._keydownHandler);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    setTimeout(() => {
      dialog.addEventListener('click', dialog._clickHandler);
    }, 100);
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ ${index + 1} (${dialog.id}):`, {
      hasShowHandler: !!dialog._showHandler,
      hasCloseHandler: !!dialog._closeHandler,
      hasKeydownHandler: !!dialog._keydownHandler,
      hasClickHandler: !!dialog._clickHandler
    });
  });
  
  // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
  window.interestsDialogsInitialized = true;
  
  console.log('initInterestsDialogs: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  console.log('initInterestsDialogs: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:');
  dialogs.forEach((dialog, index) => {
    console.log(`–î–∏–∞–ª–æ–≥ ${index + 1}:`, {
      hasShowHandler: !!dialog._showHandler,
      hasCloseHandler: !!dialog._closeHandler,
      hasKeydownHandler: !!dialog._keydownHandler,
      hasClickHandler: !!dialog._clickHandler
    });
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  window.testInterestsModal = function(dialogId) {
    const dialog = document.getElementById(dialogId);
    if (dialog) {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ interests:', dialogId);
      dialog.showModal();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
      const closeButton = dialog.querySelector('.interests_close-button');
      console.log('üß™ –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞:', closeButton);
      console.log('üß™ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏:', {
        hasClickHandler: !!closeButton?._clickHandler,
        hasTouchendHandler: !!closeButton?._touchendHandler
      });
    } else {
      console.error('‚ùå –î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω:', dialogId);
    }
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  window.resetInterestsCards = resetAllInterestCards;
  window.initInterestsCardClicks = initCardClicks;
};
